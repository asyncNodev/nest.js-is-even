version: '3.7'

services:
  frontend:
    build:
      context: ../apps/frontend
      dockerfile: Dockerfile
    volumes:
      - ../apps/frontend:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT}
    environment:
      - PORT=${FRONTEND_PORT}
      - ENVIRONMENT=${FRONTEND_ENVIRONMENT}
      - SENTRY_DSN=${FRONTEND_SENTRY_DSN}
      - API_BASE_URL=${API_BASE_URL}
    command: npm run dev

  backend:
    build:
      context: ../apps/backend
      dockerfile: Dockerfile
    volumes:
      - ../apps/backend:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    environment:
      PORT: ${BACKEND_PORT}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_USERNAME: ${DB_USERNAME}
      DB_DATABASE_NAME: ${DB_DATABASE_NAME}
      AWS_REGION: ${AWS_REGION}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_COGNITO_USER_POOL_ID: ${AWS_COGNITO_USER_POOL_ID}
      AWS_COGNITO_CLIENT_ID: ${AWS_COGNITO_CLIENT_ID}
      AWS_COGNITO_ISSUER: ${AWS_COGNITO_ISSUER}
      TYPEORM_LOCAL_CLI_DB_HOST: ${TYPEORM_LOCAL_CLI_DB_HOST}
      STRIPE_API_KEY: ${STRIPE_API_KEY}
      STRIPE_SUCCESS_URL: ${STRIPE_SUCCESS_URL}
      STRIPE_CANCEL_URL: ${STRIPE_CANCEL_URL}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
    command: npm run start:dev
    depends_on:
      - postgres

  postgres:
    image: postgres:13
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
    ports:
      - ${DB_PORT}:${DB_PORT}
